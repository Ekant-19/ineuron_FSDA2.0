USE DATABASE DATASETS;


CREATE OR REPLACE TABLE SALES_DATA(
order_id VARCHAR(50), 
order_date DATE,
ship_date DATE,
ship_mode VARCHAR(50),
customer_name CHAR(50),
segment CHAR(50),
state CHAR(50),
country CHAR(50),
market CHAR(50),
region CHAR(50),
product_id VARCHAR(50),
category CHAR(50),
sub_category CHAR(50),
product_name CHAR(150),
sales NUMBER(30),
quantity NUMBER(30),
discount NUMBER(12,5),
profit NUMBER(12,8),
shipping_cost NUMBER(12,5),
order_priority CHAR(50),
year NUMBER(15)
);
     
SELECT * FROM SALES_DATA; 

-- ADD PRIMARY KEY
ALTER TABLE SALES_DATA
ADD PRIMARY KEY(order_id);


-- EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.

select regexp_substr_all(order_id, '[[:digit:]]',8) as new_id from sales_data;

SELECT * ,SPLIT_PART(ORDER_ID,'-',3) AS NEW_ID FROM SALES_DATA;


--FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FRO EVERY ORDER ID.
                                 
SELECT *,
   CASE 
    WHEN DISCOUNT > 0 THEN 'Profit'
    WHEN DISCOUNT < 0 THEN 'Loss'
    ELSE 'No profit or loss' 
    END AS FLAG_DISCOUNT   
    FROM SALES_DATA;
    
    
    
    
SELECT * FROM SALES_DATA;
 
--FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.

ALTER TABLE SALES_DATA
ADD COLUMN DAYS_TO_REACH NUMBER(5);
 
UPDATE SALES_DATA
SET DAYS_TO_REACH = DATEDIFF('DAY',ORDER_DATE,SHIP_DATE);
 
DESC TABLE SALES_DATA;
 
-- FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,
--LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 
--10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.

SELECT *,
    CASE 
         WHEN  DAYS_TO_REACH <= 3 THEN '*****'
         WHEN  DAYS_TO_REACH <= 6 AND DAYS_TO_REACH > 3  THEN '****'
         WHEN  DAYS_TO_REACH < 10 AND DAYS_TO_REACH > 6  THEN '***'
         ELSE '**'
         END AS RATINGS
 FROM SALES_DATA;
